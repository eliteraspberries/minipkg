.if exists(${LOCALBASE}/bin/curl)
TOOLS_PLATFORM.curl=	${LOCALBASE}/bin/curl
.endif

CPPFLAGS+=		-D__STDC_WANT_LIB_EXT1__=1
CPPFLAGS+=		-D_FORTIFY_SOURCE=1
CFLAGS+=		-fpic
CFLAGS+=		-Os
CFLAGS+=		-fno-strict-aliasing
CFLAGS+=		-fno-strict-overflow
CFLAGS+=		-fno-common
CFLAGS+=		-fno-builtin
CFLAGS+=		-fwrapv
CXXFLAGS=		${CFLAGS}
LDFLAGS+=		-pie
LDFLAGS+=		-Wl,-S
LDFLAGS.Linux+=		-Wl,-z,relro
LDFLAGS.Linux+=		-Wl,-z,noexecstack
LDFLAGS.Linux+=		-Wl,-z,muldefs
LDFLAGS.Darwin+=	-Wl,-search_paths_first

SPATCHES=		${PKGSRCDIR}/spatches
LOCALPATCHES=		${PKGSRCDIR}/localpatches

MASTER_SITE_OVERRIDE=	https://s3.amazonaws.com/minipkg.eliteraspberries.com/distfiles/

.PHONY: fix-perm
fix-perm:
	(find ${WRKSRC} -type f | python ~/minipkg/fix-perm.py) || true

post-extract: fix-perm

.PHONY: fix-rpaths
fix-rpaths:
	(find ${WRKDIR}/.destdir | \
		python ~/minipkg/fix-rpath.py ${LOCALBASE}) || true

.PHONY: fix-shebangs
fix-shebangs:
	(find ${WRKDIR}/.destdir | python ~/minipkg/fix-shebang.py) || true

post-install: fix-rpaths fix-shebangs

.PHONY: spatch
spatch:
	(for f in ${LOCALPATCHES}/${PKGPATH}/*.sed ${SPATCHES}/*.sed; do \
		for i in 1 2 3 4 5 6 7 8 9 10; do \
		find ${WRKSRC} -type f -name '*.[ch]' | xargs -n1 -P4 -- \
		/usr/bin/sed -i.orig -f $$f; \
		done; \
		done) || true
	(WRKSRC=${WRKSRC} PKGPATH=${PKGPATH} \
		LOCALPATCHES=${LOCALPATCHES} SPATCHES=${SPATCHES} \
		sh ~/minipkg/spatch.sh) || true

.if !(defined(SPATCH) && ${SPATCH} == "no")
post-patch: spatch
.endif

PKG_DEFAULT_OPTIONS=	-debug -nls
